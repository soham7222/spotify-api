// Code generated by MockGen. DO NOT EDIT.
// Source: read_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	model "spotify-api/spotify/read/model"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockReadRepository is a mock of ReadRepository interface.
type MockReadRepository struct {
	ctrl     *gomock.Controller
	recorder *MockReadRepositoryMockRecorder
}

// MockReadRepositoryMockRecorder is the mock recorder for MockReadRepository.
type MockReadRepositoryMockRecorder struct {
	mock *MockReadRepository
}

// NewMockReadRepository creates a new mock instance.
func NewMockReadRepository(ctrl *gomock.Controller) *MockReadRepository {
	mock := &MockReadRepository{ctrl: ctrl}
	mock.recorder = &MockReadRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReadRepository) EXPECT() *MockReadRepositoryMockRecorder {
	return m.recorder
}

// SelectTracksByArtist mocks base method.
func (m *MockReadRepository) SelectTracksByArtist(ctx *gin.Context, artist string) ([]model.TrackDetailsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectTracksByArtist", ctx, artist)
	ret0, _ := ret[0].([]model.TrackDetailsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SelectTracksByArtist indicates an expected call of SelectTracksByArtist.
func (mr *MockReadRepositoryMockRecorder) SelectTracksByArtist(ctx, artist interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectTracksByArtist", reflect.TypeOf((*MockReadRepository)(nil).SelectTracksByArtist), ctx, artist)
}

// SelectTracksByISRC mocks base method.
func (m *MockReadRepository) SelectTracksByISRC(ctx *gin.Context, artist string) ([]model.TrackDetailsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectTracksByISRC", ctx, artist)
	ret0, _ := ret[0].([]model.TrackDetailsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SelectTracksByISRC indicates an expected call of SelectTracksByISRC.
func (mr *MockReadRepositoryMockRecorder) SelectTracksByISRC(ctx, artist interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectTracksByISRC", reflect.TypeOf((*MockReadRepository)(nil).SelectTracksByISRC), ctx, artist)
}
